{"ast":null,"code":"import connectDB from '../../../utils/connectDB';\nimport Categories from '../../../models/categoriesModel';\nimport auth from '../../../middleware/auth';\nconnectDB();\nexport default async (req, res) => {\n  switch (req.method) {\n    case \"POST\":\n      await createCategory(req, res);\n      break;\n    case \"GET\":\n      await getCategories(req, res);\n      break;\n  }\n};\nconst createCategory = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin') return res.status(400).json({\n      err: \"Authentication is not valid.\"\n    });\n    const {\n      name\n    } = req.body;\n    if (!name) return res.status(400).json({\n      err: \"Name can not be left blank.\"\n    });\n    const newCategory = new Categories({\n      name\n    });\n    await newCategory.save();\n    res.json({\n      msg: 'Success! Created a new category.',\n      newCategory\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};\nconst getCategories = async (req, res) => {\n  try {\n    const categories = await Categories.find();\n    res.json({\n      categories\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module"}