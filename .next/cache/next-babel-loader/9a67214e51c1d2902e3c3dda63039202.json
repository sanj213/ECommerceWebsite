{"ast":null,"code":"import connectDB from '../../../utils/connectDB';\nimport Products from '../../../models/productModel';\nimport auth from '../../../middleware/auth';\nconnectDB();\nexport default async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await getProduct(req, res);\n      break;\n    case \"PUT\":\n      await updateProduct(req, res);\n      break;\n    case \"DELETE\":\n      await deleteProduct(req, res);\n      break;\n  }\n};\nconst getProduct = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.query;\n    const product = await Products.findById(id);\n    if (!product) return res.status(400).json({\n      err: 'This product does not exist.'\n    });\n    res.json({\n      product\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};\nconst updateProduct = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin') return res.status(400).json({\n      err: 'Authentication is not valid.'\n    });\n    const {\n      id\n    } = req.query;\n    const {\n      title,\n      price,\n      inStock,\n      description,\n      content,\n      category,\n      images\n    } = req.body;\n    if (!title || !price || !inStock || !description || !content || category === 'all' || images.length === 0) return res.status(400).json({\n      err: 'Please add all the fields.'\n    });\n    await Products.findOneAndUpdate({\n      _id: id\n    }, {\n      title: title.toLowerCase(),\n      price,\n      inStock,\n      description,\n      content,\n      category,\n      images\n    });\n    res.json({\n      msg: 'Success! Updated a product'\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};\nconst deleteProduct = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin') return res.status(400).json({\n      err: 'Authentication is not valid.'\n    });\n    const {\n      id\n    } = req.query;\n    await Products.findByIdAndDelete(id);\n    res.json({\n      msg: 'Deleted a product.'\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"names":["connectDB","Products","auth","req","res","method","getProduct","updateProduct","deleteProduct","id","query","product","findById","status","json","err","message","result","role","title","price","inStock","description","content","category","images","body","length","findOneAndUpdate","_id","toLowerCase","msg","findByIdAndDelete"],"sources":["/Users/sanjanaa/Documents/UrbanBasket/pages/api/product/[id].js"],"sourcesContent":["import connectDB from '../../../utils/connectDB'\nimport Products from '../../../models/productModel'\nimport auth from '../../../middleware/auth'\n\nconnectDB()\n\nexport default async (req, res) => {\n    switch(req.method){\n        case \"GET\":\n            await getProduct(req, res)\n            break;\n        case \"PUT\":\n            await updateProduct(req, res)\n            break;\n        case \"DELETE\":\n            await deleteProduct(req, res)\n            break;\n    }\n}\n\nconst getProduct = async (req, res) => {\n    try {\n        const { id } = req.query;\n\n        const product = await Products.findById(id)\n        if(!product) return res.status(400).json({err: 'This product does not exist.'})\n        \n        res.json({ product })\n\n    } catch (err) {\n        return res.status(500).json({err: err.message})\n    }\n}\n\nconst updateProduct = async (req, res) => {\n    try {\n        const result = await auth(req, res)\n        if(result.role !== 'admin') \n        return res.status(400).json({err: 'Authentication is not valid.'})\n\n        const {id} = req.query\n        const {title, price, inStock, description, content, category, images} = req.body\n\n        if(!title || !price || !inStock || !description || !content || category === 'all' || images.length === 0)\n        return res.status(400).json({err: 'Please add all the fields.'})\n\n        await Products.findOneAndUpdate({_id: id}, {\n            title: title.toLowerCase(), price, inStock, description, content, category, images\n        })\n\n        res.json({msg: 'Success! Updated a product'})\n    } catch (err) {\n        return res.status(500).json({err: err.message})\n    }\n}\n\nconst deleteProduct = async(req, res) => {\n    try {\n        const result = await auth(req, res)\n        \n        if(result.role !== 'admin') \n        return res.status(400).json({err: 'Authentication is not valid.'})\n\n        const {id} = req.query\n\n        await Products.findByIdAndDelete(id)\n        res.json({msg: 'Deleted a product.'})\n\n    } catch (err) {\n        return res.status(500).json({err: err.message})\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}