{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport connectDB from '../../../utils/connectDB';\nimport Products from '../../../models/productModel';\nimport auth from '../../../middleware/auth';\nconnectDB();\nexport default async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await getProducts(req, res);\n      break;\n    case \"POST\":\n      await createProduct(req, res);\n      break;\n  }\n};\nclass APIfeatures {\n  constructor(query, queryString) {\n    this.query = query;\n    this.queryString = queryString;\n  }\n  filtering() {\n    const queryObj = _objectSpread({}, this.queryString);\n    const excludeFields = ['page', 'sort', 'limit'];\n    excludeFields.forEach(el => delete queryObj[el]);\n    if (queryObj.category !== 'all') this.query.find({\n      category: queryObj.category\n    });\n    if (queryObj.title !== 'all') this.query.find({\n      title: {\n        $regex: queryObj.title\n      }\n    });\n    this.query.find();\n    return this;\n  }\n  sorting() {\n    if (this.queryString.sort) {\n      const sortBy = this.queryString.sort.split(',').join('');\n      this.query = this.query.sort(sortBy);\n    } else {\n      this.query = this.query.sort('-createdAt');\n    }\n    return this;\n  }\n  paginating() {\n    const page = this.queryString.page * 1 || 1;\n    const limit = this.queryString.limit * 1 || 6;\n    const skip = (page - 1) * limit;\n    this.query = this.query.skip(skip).limit(limit);\n    return this;\n  }\n}\nconst getProducts = async (req, res) => {\n  try {\n    const features = new APIfeatures(Products.find(), req.query).filtering().sorting().paginating();\n    const products = await features.query;\n    res.json({\n      status: 'success',\n      result: products.length,\n      products\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};\nconst createProduct = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin') return res.status(400).json({\n      err: 'Authentication is not valid.'\n    });\n    const {\n      title,\n      price,\n      inStock,\n      description,\n      content,\n      category,\n      images\n    } = req.body;\n    if (!title || !price || !inStock || !description || !content || category === 'all' || images.length === 0) return res.status(400).json({\n      err: 'Please add all the fields.'\n    });\n    const newProduct = new Products({\n      title: title.toLowerCase(),\n      price,\n      inStock,\n      description,\n      content,\n      category,\n      images\n    });\n    await newProduct.save();\n    res.json({\n      msg: 'Success! Created a new product'\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module"}