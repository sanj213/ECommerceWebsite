{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState } from 'react';\nimport { patchData } from '../utils/fetchData';\nimport { updateItem } from '../store/Actions';\nimport PaypalBtn from './paypalBtn'; // Import PayPal Button component\nimport Link from 'next/link';\nimport { jsxs as _jsxs, jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar OrderDetail = function OrderDetail(_ref) {\n  var orderDetail = _ref.orderDetail,\n    state = _ref.state,\n    dispatch = _ref.dispatch;\n  var auth = state.auth,\n    orders = state.orders;\n  var _useState = useState(false),\n    paymentCompleted = _useState[0],\n    setPaymentCompleted = _useState[1]; // State to track payment completion\n\n  var handleDelivered = function handleDelivered(order) {\n    dispatch({\n      type: 'NOTIFY',\n      payload: {\n        loading: true\n      }\n    });\n    patchData(\"order/delivered/\".concat(order._id), null, auth.token).then(function (res) {\n      if (res.err) return dispatch({\n        type: 'NOTIFY',\n        payload: {\n          error: res.err\n        }\n      });\n      var _res$result = res.result,\n        paid = _res$result.paid,\n        dateOfPayment = _res$result.dateOfPayment,\n        method = _res$result.method,\n        delivered = _res$result.delivered;\n      dispatch(updateItem(orders, order._id, _objectSpread(_objectSpread({}, order), {}, {\n        paid: paid,\n        dateOfPayment: dateOfPayment,\n        method: method,\n        delivered: delivered\n      }), 'ADD_ORDERS'));\n      return dispatch({\n        type: 'NOTIFY',\n        payload: {\n          success: res.msg\n        }\n      });\n    });\n  };\n  if (!auth.user) return null;\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: orderDetail.map(function (order) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          margin: '20px auto'\n        },\n        className: \"row justify-content-around\",\n        children: !paymentCompleted ? /*#__PURE__*/_jsxs(\"div\", {\n          className: \"p-4\",\n          children: [/*#__PURE__*/_jsxs(\"h2\", {\n            className: \"mb-4 text-uppercase\",\n            children: [\"Total: $\", order.total]\n          }), /*#__PURE__*/_jsx(PaypalBtn, {\n            order: order,\n            onPaymentSuccess: function onPaymentSuccess() {\n              return setPaymentCompleted(true);\n            }\n          })]\n        }) : /*#__PURE__*/_jsxs(\"div\", {\n          className: \"text-uppercase my-3\",\n          style: {\n            maxWidth: '600px'\n          },\n          children: [/*#__PURE__*/_jsxs(\"h2\", {\n            className: \"text-break\",\n            children: [\"Order \", order._id]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"mt-4 text-secondary\",\n            children: [/*#__PURE__*/_jsx(\"h3\", {\n              children: \"Shipping\"\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"Name: \", order.user.name]\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"Email: \", order.user.email]\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"Address: \", order.address]\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"Mobile: \", order.mobile]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"alert \".concat(order.delivered ? 'alert-success' : 'alert-danger', \" d-flex justify-content-between align-items-center\"),\n              role: \"alert\",\n              children: [order.delivered ? \"Delivered on \".concat(order.updatedAt) : 'Not Delivered', auth.user.role === 'admin' && !order.delivered && /*#__PURE__*/_jsx(\"button\", {\n                className: \"btn btn-dark text-uppercase\",\n                onClick: function onClick() {\n                  return handleDelivered(order);\n                },\n                children: \"Mark as delivered\"\n              })]\n            }), /*#__PURE__*/_jsx(\"h3\", {\n              children: \"Payment\"\n            }), order.method && /*#__PURE__*/_jsxs(\"h6\", {\n              children: [\"Method: \", /*#__PURE__*/_jsx(\"em\", {\n                children: order.method\n              })]\n            }), order.paymentId && /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"PaymentId: \", /*#__PURE__*/_jsx(\"em\", {\n                children: order.paymentId\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"alert \".concat(order.paid ? 'alert-success' : 'alert-danger', \" d-flex justify-content-between align-items-center\"),\n              role: \"alert\",\n              children: order.paid ? \"Paid on \".concat(order.dateOfPayment) : 'Not Paid'\n            }), /*#__PURE__*/_jsx(\"h3\", {\n              children: \"Order Items\"\n            }), order.cart.map(function (item) {\n              return /*#__PURE__*/_jsxs(\"div\", {\n                className: \"row border-bottom mx-0 p-2 justify-content-betwenn align-items-center\",\n                style: {\n                  maxWidth: '550px'\n                },\n                children: [/*#__PURE__*/_jsx(\"img\", {\n                  src: item.images[0].url,\n                  alt: item.images[0].url,\n                  style: {\n                    width: '50px',\n                    height: '45px',\n                    objectFit: 'cover'\n                  }\n                }), /*#__PURE__*/_jsx(\"h5\", {\n                  className: \"flex-fill text-secondary px-3 m-0\",\n                  children: /*#__PURE__*/_jsx(Link, {\n                    href: \"/product/\".concat(item._id),\n                    children: item.title\n                  })\n                }), /*#__PURE__*/_jsxs(\"span\", {\n                  className: \"text-info m-0\",\n                  children: [item.quantity, \" x $\", item.price, \" = $\", item.price * item.quantity]\n                })]\n              }, item._id);\n            })]\n          })]\n        })\n      }, order._id);\n    })\n  });\n};\nexport default OrderDetail;","map":null,"metadata":{},"sourceType":"module"}